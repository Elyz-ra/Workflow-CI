name: MLflow CI/CD Advance

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  mlflow-ci:
    runs-on: ubuntu-latest

    steps:
    - name: Set up job
      run: echo "ðŸš€ Starting MLflow CI/CD..."

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python 3.12.7
      uses: actions/setup-python@v4
      with:
        python-version: "3.12.7"

    - name: Check Env
      run: python --version

    - name: Install dependencies
      run: |
        # Instal semua dependensi Python yang diperlukan untuk menjalankan proyek dan MLflow
        pip install mlflow pandas scikit-learn # dagshub tidak perlu jika tidak melacak ke DagsHub

    - name: Set MLflow Tracking URI to Local
      run: echo "MLFLOW_TRACKING_URI=./mlruns" >> $GITHUB_ENV 

    - name: Run MLflow project
      run: |
        # Perintah ini sekarang akan melacak secara lokal (ke ./mlruns).
        # Flag '--no-conda' tetap diperlukan jika kamu menggunakan Conda environment.
        mlflow run MLProjects --no-conda -P data_folder=ecommerce_shipping_data_preprocessed

    - name: Install Docker dependency
      run: pip install docker

    - name: Upload MLflow artifacts (local mlruns folder)
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-model-artifact
        path: mlruns/

    - name: Build Docker Model
      run: |
        latest_run=$(ls -t mlruns/0 | head -n 1)
        mlflow models build-docker -m mlruns/0/$latest_run/artifacts/model -n shipping-delay

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Tag Docker Image
      run: docker tag shipping-delay:latest ${{ secrets.DOCKER_USERNAME }}/shipping-delay:latest

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/shipping-delay:latest

    - name: Post Log in to Docker Hub
      run: echo "ðŸ§¼ Logged out from Docker Hub"
      if: always()

    - name: Post set up Python 3.12.7
      run: echo "ðŸ§¹ Python teardown complete"
      if: always()

    - name: Post Run actions/checkout@v3
      run: echo "ðŸ§½ Repo checkout done"
      if: always()

    - name: Complete job
      run: echo "âœ… CI/CD workflow complete!"